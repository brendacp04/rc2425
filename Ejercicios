/*
 * my_Length(List, Num) es cierto si Num 
 * unifica con el número de elementos de List
 * 
 * Inducción
 * 1) P(n0) es cierto.
 * 2) P(n-1) -> P(n)
 *    P("N"):- p("n-1").
 * 
 * */

my_Length([], 0).
my_Length([_|Resto], S):- my_Length(Resto, R), S is R + 1.



/*
 * comprime(Lista, R) es cierto si R unifica con una 
 * Lista de la sigueinte forma:
 * 
 * comprime([a,a,a,b,b,c,a,a], R).
 * R = [(a,3), (b,2), (c,1), (a,2)]
 * 
 * */

/*
 * elemento_n(+Lista, +N, -R) es cierto cuando R unifica 
 * con el elemento de la Lista que ocupa la posición N
 * empezando a contar en 1.
 * 
 * * Inducción
 * 1) P(n0) es cierto.
 * 2) P(n-1) -> P(n)
 *    P("N"):- p("n-1").
 * 
 * */

elemento_n([Cab|_], 1, Cab).
elemento_n([Cab|Resto], N, R):- N2 is N-1, elemento_n(Resto, N2, R).
